version: '3'

vars:
  NAME: nerfstudio-gsplat
  VERSION_TAG: 1.4.0
  REPOSITORIES: 
    - ghcr.io/fabulani
    - harbor.management.twinverse.dev/twinverse
  TAGS:  # Tags are formed like so: REPO/NAME:VERSION_TAG, for REPO in REPOSITORIES
    sh: |
      for repo in {{ range $i, $repo := .REPOSITORIES }}{{ if $i }} {{ end }}"{{ $repo }}"{{ end }}; do
        echo "$repo/{{ .NAME }}:{{ .VERSION_TAG }}"
      done

tasks:
  clone:
    desc: Clone gsplat
    vars:
      REPO: https://github.com/nerfstudio-project/gsplat.git
      REPO_PATH: ./repo
      COMMIT_ID: e86f392
    cmds: 
      - |
        git clone {{.REPO}} {{.REPO_PATH}} --recursive && \
        cd {{.REPO_PATH}} && \
        git checkout {{.COMMIT_ID}}
      - cp docker/requirements.txt {{.REPO_PATH}}/examples/requirements.txt

  build:
    desc: Build gsplat image
    requires:
      vars: [TORCH_CUDA_ARCH_LIST, MAX_JOBS]
    cmds: 
      - |
        docker build \
        --build-arg TORCH_CUDA_ARCH_LIST={{.TORCH_CUDA_ARCH_LIST}} \
        --build-arg MAX_JOBS={{.MAX_JOBS}} \
        -t "{{ .NAME }}:{{ .VERSION_TAG }}" \
        -f ./docker/Dockerfile ./docker
      - for: { var: TAGS }
        cmd: docker tag "{{ .NAME }}:{{ .VERSION_TAG }}" "{{ .ITEM }}"

  push:
    desc: Push image to registry
    cmds:
      - for: { var: TAGS }
        cmd: docker push {{ .ITEM }}

  pull:
    desc: Pull image from registry
    cmds:
      - docker pull {{ index .TAGS 0 }}
      - docker tag {{ index .TAGS 0 }} "{{ .NAME }}:{{ .VERSION_TAG }}"

  run:
    desc: Run gsplat
    cmds:
      - docker compose -f ./docker/docker-compose.yml up -d
      - docker exec -it nerfstudio-gsplat bash